sap.ui.controller("smpdemo.Register", {

/**
* Called when a controller is instantiated and its View controls (if available) are already created.
* Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
* @memberOf smpdemo.Register
*/
	onInit: function() {
		//Loading Busy Dialog fragment
		busyDialog = sap.ui.jsfragment("smpdemo.fragments.BusyDialog", this);
		//Add Busy Dialog fragment to view
		this.getView().addDependent(busyDialog);
	},

/**
* Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
* (NOT before the first rendering! onInit() is used for that one!).
* @memberOf smpdemo.Register
*/
//	onBeforeRendering: function() {
//
//	},

/**
* Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
* This hook is the same one that SAPUI5 controls get after being rendered.
* @memberOf smpdemo.Register
*/
//	onAfterRendering: function() {
//
//	},

/**
* Called when the Controller is destroyed. Use this one to free resources and finalize activities.
* @memberOf smpdemo.Register
*/
//	onExit: function() {
//
//	}
	handleRegister: function (oEvent) {
		console.log("In Handle Register!!!");
		busyDialog.open();
		var request = {"DeviceType":"android"};
		$.ajax({			
			url : "http://10.11.46.11:8081/odata/applications/latest/com.persistent.sfdc.Trial/Connections",				// the URL for the request
			type : "POST",		// whether this is a POST or GET request
			dataType : "json",		// the type of data we expect back,',
			data : JSON.stringify(request),
			contentType : "application/json; charset=utf-8",
			success : function(response) {	// code to run if the request succeeds; the response is passed to the function
				console.log("Success response : ",response.d.ApplicationConnectionId);
				if(response.d.ApplicationConnectionId !="" || response.d.ApplicationConnectionId != undefined){
					localStorage.setItem("APPCID", response.d.ApplicationConnectionId);
					var registerButton = sap.ui.getCore().byId("registerButtonId");
					registerButton.setVisible(false);
				}
			},
			error : function(xhr, status) {	// code to run if the request fails; the raw request and status codes are passed to the function				
				console.log("Error response : ",status);
			},
			complete : function(xhr, status) {		// code to run regardless of success or failure
				console.log("In complete");
				busyDialog.close();
			}
		});
	},
	
	handleUnRegister: function (oEvent) {
		busyDialog.open();
		var appCId = localStorage.getItem("APPCID");
		if(appCId =="" || appCId == undefined){
			alert("Please do registration first.");
			return false;
		}
		else{
			$.ajax({			
				url : "http://10.11.46.11:8081/odata/applications/latest/com.persistent.sfdc.Trial/Connections('" + localStorage.getItem("APPCID") + "')",				// the URL for the request
				type : "DELETE",		// whether this is a POST or GET request
				crossDomain: true,
				success : function(response) {	// code to run if the request succeeds; the response is passed to the function
					appCId = "";
					localStorage.setItem("APPCID", appCId);
					if(appCId =="" || appCId == undefined){
						var registerButton = sap.ui.getCore().byId("registerButtonId");
						registerButton.setVisible(true);
					}
				},
				error : function(xhr, status) {	// code to run if the request fails; the raw request and status codes are passed to the function				
					console.log("Error response : ", status);
				},
				complete : function(xhr, status) {		// code to run regardless of success or failure
					console.log("In complete");
					busyDialog.close();
				}
			});
		}
	},
	
	handleAccessData: function (oEvent) {
		busyDialog.close();
		var appCId = localStorage.getItem("APPCID");
		if(appCId =="" || appCId == undefined){
			alert("Please do registration first to access data.");
			return false;
		}
		else{
			app.to("idLanding");
		}		
	},

});